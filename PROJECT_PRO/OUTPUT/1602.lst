C51 COMPILER V9.59.0.0   1602                                                              07/07/2019 20:43:29 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 1602
OBJECT MODULE PLACED IN .\Objects\1602.obj
COMPILER INVOKED BY: E:\MDK5\C51\BIN\C51.EXE FLIB\1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\INC) DEBUG OBJECTEXTEND PRINT
                    -(.\OUTPUT\1602.lst) TABS(2) OBJECT(.\Objects\1602.obj)

line level    source

   1          #include "1602.h"
   2          #include "DS1302.h"
   3          
   4          
   5          //初始化
   6          void LCD_Init()
   7          {
   8   1        LCD1602_Write_CMD(0x38);                //设置16*2显示，5*7点阵，8位数据接口
   9   1        LCD1602_Write_CMD(0x0c);                //开显示，不显示光标
  10   1        LCD1602_Write_CMD(0x06);                //当读或写一个字符后地址指针加一，且光标加一
  11   1        LCD1602_Write_CMD(0x01);                //显示清屏
  12   1        
  13   1      }
  14          
  15          
  16          //忙检测
  17          void Read_Busy()
  18          {
  19   1        u8 busy;
  20   1        LCD1602_DB = 0xff;
  21   1        LCD1602_RS = 0;
  22   1        LCD1602_RW = 1;                         //LCD1602设置为读状态
  23   1        
  24   1        do
  25   1        {
  26   2          LCD1602_EN = 1;                       //判断BIT7是否为1
  27   2          busy = LCD1602_DB;                    //若为1，则busy标志被置一
  28   2          LCD1602_EN = 0;                       //一直在此循环中运行
  29   2        }while(busy & 0x80);                    
  30   1        
  31   1      }
  32          
  33          
  34          //写指令
  35          void LCD1602_Write_CMD(u8 cmd)
  36          {
  37   1        Read_Busy();                            //忙检测
  38   1        LCD1602_RS = 0;
  39   1        LCD1602_RW = 0;                         //写命令状态
  40   1        LCD1602_DB = cmd;
  41   1        LCD1602_EN = 1;
  42   1        LCD1602_EN = 0;
  43   1        
  44   1      }
  45          
  46          
  47          //写数据
  48          void LCD1602_Write_DAT(u8 dat)
  49          {
  50   1        Read_Busy();                            //忙检测
  51   1        LCD1602_RS = 1;
  52   1        LCD1602_RW = 0;                         //写数据状态
  53   1        LCD1602_DB = dat;
  54   1        LCD1602_EN = 1;
C51 COMPILER V9.59.0.0   1602                                                              07/07/2019 20:43:29 PAGE 2   

  55   1        LCD1602_EN = 0;
  56   1        
  57   1      }
  58          
  59          
  60          //坐标显示
  61          void LCD_Set_Display(u8 x, u8 y)
  62          {
  63   1        u8 addr;
  64   1        
  65   1        if(y == 0)
  66   1          addr = 0x00 + x;                      //在第一行显示
  67   1        else
  68   1          addr = 0x40 + x;                      //在第二行显示
  69   1        LCD1602_Write_CMD(addr | 0x80);         //在第几行第几个显示
  70   1        
  71   1      }
  72          
  73          
  74          //显示一个字节数据
  75          void LCD_Display_OneChar(u8 X, u8 Y, u8 Data)
  76          {
  77   1        if(Y)
  78   1          X |= 0x40;
  79   1        X |= 0x80;                              //Y=1，显示第二行，Y=0，显示第一行
  80   1        
  81   1        LCD1602_Write_CMD(X);                   //X用来选择哪一位
  82   1        LCD1602_Write_DAT(Data);                //Data用来写数据
  83   1        
  84   1      }
  85          
  86          
  87          //显示一个字节字符
  88          void LCD_Display_OneStr(u8 X, u8 Y, u8 Data)
  89          {
  90   1        LCD_Display_OneChar(X++, Y, Data/16 + '0');
  91   1        LCD_Display_OneChar(X, Y, Data%16 + '0');
  92   1        
  93   1      }
  94          
  95          
  96          //显示字符串
  97          void LCD_ShowStr(u8 x, u8 y, u8 *str)
  98          {
  99   1        LCD_Set_Display(x, y);                  //当前字符的坐标
 100   1        
 101   1        while(*str != '\0')                     //判断是否显示完
 102   1        {
 103   2          LCD1602_Write_DAT(*str++);
 104   2        }
 105   1      }
 106          
 107          
 108          //1602显示时间
 109          void LCD_Display_Time()
 110          {
 111   1          LCD_Display_OneStr(1, 0, TimeDat[2]);           //时
 112   1          LCD_Display_OneChar(3, 0, ':');                 //:
 113   1          LCD_Display_OneStr(4, 0, TimeDat[1]);           //分
 114   1          LCD_Display_OneChar(6, 0, ':');                 //:
 115   1          LCD_Display_OneStr(7, 0, TimeDat[0] & 0x7f);    //秒
 116   1      }
C51 COMPILER V9.59.0.0   1602                                                              07/07/2019 20:43:29 PAGE 3   

 117          
 118          //1602显示日期
 119          void LCD_Display_Date()
 120          {
 121   1          LCD_ShowStr(0, 1, "20");                              //1602显示字符串"20"
 122   1          LCD_Display_OneChar(2, 1, TimeDat[6]/16 + '0');       //年
 123   1          LCD_Display_OneChar(3, 1, TimeDat[6]%16 + '0');
 124   1          LCD_Display_OneChar(4, 1, '-');                       //-
 125   1          LCD_Display_OneChar(5, 1, TimeDat[4]/16 + '0');       //月
 126   1          LCD_Display_OneChar(6, 1, TimeDat[4]%16 + '0');       
 127   1          LCD_Display_OneChar(7, 1, '-');                       //-
 128   1          LCD_Display_OneChar(8, 1, TimeDat[3]/16 + '0');     //日
 129   1          LCD_Display_OneChar(9, 1, TimeDat[3]%16 + '0');
 130   1      }
 131          
 132          //1602显示周
 133          void LCD_Display_Week()
 134          {
 135   1        LCD_ShowStr(9, 0, "Week:");                 //周
 136   1        LCD_Display_OneStr(14, 0, TimeDat[5]);
 137   1      }
 138          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    330    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
